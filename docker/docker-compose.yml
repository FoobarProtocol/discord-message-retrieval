version: '3.8'

services:
  bot:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: discord-rag-bot
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-discord_rag}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    volumes:
      - ../logs:/app/logs
    networks:
      - discord-rag-network

  postgres:
    image: postgres:15-alpine
    container_name: discord-rag-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-discord_rag}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-discord_rag}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - discord-rag-network

volumes:
  postgres_data:
    name: discord-rag-postgres-data

networks:
  discord-rag-network:
    name: discord-rag-network
